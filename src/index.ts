#!/usr/bin/env node

import { Command } from "commander";
import * as fs from "fs";
import * as path from "path";
import { spawn } from "child_process"; // Replace execa with this

const program = new Command();

program
  .version("1.0.0")
  .description("CLI for creating a new project with 1car.us setup");

program
  .command("create <project-name>")
  .description(
    "Create a new project directory and install necessary npm packages"
  )
  .action(async (projectName: string) => {
    // Step 1: Create a new project directory
    const projectPath = path.join(process.cwd(), projectName);
    if (!fs.existsSync(projectPath)) {
      fs.mkdirSync(projectPath);
      console.log(`Created project directory: ${projectPath}`);
    } else {
      console.error(
        "Directory already exists. Please choose a different project name."
      );
      process.exit(1);
    }

    // Step 2: Generate basic project files
    const packageJsonContent = `{
  "name": "${projectName}",
  "version": "0.0.1",
  "description": "Generated by icarus cli",
  "scripts": {
    "start": "node index.js"
  },
  "dependencies": {
      "1car.us": "^0.0.9"
  }
}`;
    fs.writeFileSync(
      path.join(projectPath, "package.json"),
      packageJsonContent
    );

    fs.writeFileSync(
      path.join(projectPath, "index.js"),
      `console.log('Hello from ${projectName}');`
    );

    console.log("Created default package.json and index.js");

    // Step 3: Install npm packages using child_process.spawn
    const installProcess = spawn("npm", ["install"], {
      cwd: projectPath,
      stdio: "inherit",
    });

    installProcess.on("close", (code) => {
      if (code === 0) {
        console.log("Dependencies installed successfully.");
      } else {
        console.error(`npm install failed with exit code ${code}`);
      }
    });
  });

program.parse(process.argv);
